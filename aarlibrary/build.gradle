apply plugin: 'com.android.library'
// 配置上传AAR所有的远程依赖上传至本地Maven仓库
apply plugin: 'maven'
// 基本的配置
android {
    // 注意：无论是打Jar还是生成AAR,都建议删除下面的版本号和版本名称
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
//        versionCode 1
//        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        // 注意生成AAR时设置混淆打开时,需要暴露给调用者类和方法等，必须要在混淆配置文件中keep掉
        release {
            minifyEnabled true // 主要包含三部分功能：压缩、混淆和优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.github.piasy:BigImageViewer:1.4.6'
    implementation 'com.github.nanchen2251:CompressHelper:1.0.5'
}

// 配置上传AAR所有的远程依赖上传至本地Maven仓库
uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = "com.aar.test" // Library包名
            pom.artifactId = "remote-dependcies-release" // Library名称
            pom.version = "1.1.3" // Library 的版本号
            repository(url: "file://localhost/" + "Users/reesehu/Library/Android/sdk" + "/extras/android/m2repository/")
        }
    }
}
